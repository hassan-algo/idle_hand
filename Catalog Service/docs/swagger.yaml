basePath: /
definitions:
  structs.BusinessPolicies:
    properties:
      booking_deposite_percentage:
        type: integer
      booking_polices:
        type: string
      booking_terms:
        type: string
      business_guid:
        type: string
      business_policies_guid:
        type: string
      cancellation_amount:
        type: integer
      cancellation_hours:
        type: integer
      catalog_guid:
        type: string
      no_show_fee:
        type: integer
    type: object
  structs.Catalog:
    properties:
      assigned_staff_guid:
        type: string
      business_guid:
        type: string
      catalog_category:
        type: string
      catalog_description:
        type: string
      catalog_guid:
        type: string
      catalog_name:
        type: string
      catalog_offering:
        type: string
      catalog_photo:
        type: string
      catalog_price:
        type: string
    type: object
  structs.CatalogAvailability:
    properties:
      accept_same_day_booking:
        type: integer
      buffer_per_appointment:
        type: integer
      business_guid:
        type: string
      catalog_availability_guid:
        type: string
      catalog_guid:
        type: string
      day_of_week:
        type: string
      hours_per_day:
        type: integer
      number_of_breaks:
        type: integer
      slots_per_day:
        type: string
      time_per_break:
        type: string
    type: object
  structs.MyAuth:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  structs.Offers:
    properties:
      business_guid:
        type: string
      customer_type:
        type: string
      medium:
        type: integer
      offer_guid:
        type: string
      offer_message:
        type: string
      offer_title:
        type: string
    type: object
  structs.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
      valid:
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register user
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/structs.MyAuth'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Response'
      summary: Register new user
      tags:
      - auth
  /business_policies:
    delete:
      consumes:
      - application/json
      description: Delete a business policy by its GUID
      parameters:
      - description: Business Policy Object with GUID
        in: body
        name: business_policy
        required: true
        schema:
          $ref: '#/definitions/structs.BusinessPolicies'
      produces:
      - application/json
      responses:
        "200":
          description: deleted business policy
          schema:
            $ref: '#/definitions/structs.BusinessPolicies'
        "400":
          description: error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a business policy
      tags:
      - business_policies
    get:
      description: Get all business policies
      produces:
      - application/json
      responses:
        "200":
          description: business_policies
          schema:
            $ref: '#/definitions/structs.BusinessPolicies'
        "400":
          description: error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get all business policies
      tags:
      - business_policies
    post:
      consumes:
      - application/json
      description: Create a new business policy with the provided details
      parameters:
      - description: Business Policy Object
        in: body
        name: business_policy
        required: true
        schema:
          $ref: '#/definitions/structs.BusinessPolicies'
      produces:
      - application/json
      responses:
        "200":
          description: created business policy
          schema:
            $ref: '#/definitions/structs.BusinessPolicies'
        "400":
          description: error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new business policy
      tags:
      - business_policies
    put:
      consumes:
      - application/json
      description: Update an existing business policy with the provided details
      parameters:
      - description: Business Policy Object
        in: body
        name: business_policy
        required: true
        schema:
          $ref: '#/definitions/structs.BusinessPolicies'
      produces:
      - application/json
      responses:
        "200":
          description: updated business policy
          schema:
            $ref: '#/definitions/structs.BusinessPolicies'
        "400":
          description: error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a business policy
      tags:
      - business_policies
  /business_policies/{business_policies_guid}:
    get:
      description: Get a specific business policy by its GUID
      parameters:
      - description: Business Policy GUID
        in: path
        name: business_policies_guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: business policy
          schema:
            $ref: '#/definitions/structs.BusinessPolicies'
        "400":
          description: error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get business policy by ID
      tags:
      - business_policies
  /business_policies/multi:
    post:
      consumes:
      - application/json
      description: Create multiple business policies at once
      produces:
      - application/json
      responses:
        "200":
          description: MULTIPOST BusinessPolicies
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Multiple business policies creation
      tags:
      - business_policies
  /catalog:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: catalog
          schema:
            $ref: '#/definitions/structs.Catalog'
      security:
      - ApiKeyAuth: []
      summary: Get catalog
      tags:
      - catalog
  /catalog_availability:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: catalog_availability
          schema:
            $ref: '#/definitions/structs.CatalogAvailability'
      security:
      - ApiKeyAuth: []
      summary: Get catalog_availability
      tags:
      - catalog_availability
  /offers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: offers
          schema:
            $ref: '#/definitions/structs.Offers'
      security:
      - ApiKeyAuth: []
      summary: Get offers
      tags:
      - offers
securityDefinitions:
  BearerAuth:
    description: '"Bearer token"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
